{
  "$schema": "http://json-schema.org/draft-07/schema",
  "definitions": {
    "library": {
      "primitiveMode": {
        "type": "string",
        "enum": [
          "None",
          "QuadList",
          "TriangleList",
          "TriangleStrip",
          "LineList",
          "Line"
        ]
      },
      "stencilOperation": {
        "type": "string",
        "enum": [
          "Keep",
          "Replace"
        ]
      },
      "face": {
        "type": "object",
        "properties": {
          "stencilFunc": {
            "description": "Specifies the test function.",
            "$ref": "#/definitions/library/functions"
          },
          "stencilFailOp": {
            "$ref": "#/definitions/library/stencilOperation"
          },
          "stencilDepthFailOp": {
            "$ref": "#/definitions/library/stencilOperation"
          },
          "stencilPassOp": {
            "$ref": "#/definitions/library/stencilOperation"
          },
          "depthStencilFaceName": {
            "type": "string"
          }
        }
      },
      "functions": {
        "type": "string",
        "enum": [
          "Always",
          "Equal",
          "Less",
          "LessEqual",
          "Greater",
          "GreaterEqual",
          "NotEqual"
        ]
      },
      "renderTargetFormats": {
        "type": "string",
        "enum": [
          "UNKNOWN_TEXTURE_FORMAT",
          "R32G32B32A32_FLOAT",
          "R16G16B16A16_FLOAT",
          "R16G16B16A16_UNORM",
          "R32G32_FLOAT",
          "R8G8B8A8_UNORM",
          "R8G8B8A8_UNORM_SRGB",
          "R10G10B10A2_UNORM",
          "R16G16_UNORM",
          "R16G16_UINT",
          "D32_FLOAT",
          "R32_FLOAT",
          "R32_UINT",
          "R24G8_TYPELESS",
          "D24_UNORM_S8_UINT",
          "R24_UNORM_X8_TYPELESS",
          "D16_UNORM",
          "R8_UNORM",
          "R8_UINT",
          "A8_UNORM",
          "BC3_UNORM",
          "R5G6B5_UNORM",
          "R5G5B5A1_UNORM",
          "B8G8R8A8_UNORM",
          "B8G8R8A8_UNORM_SRGB",
          "BC7_UNORM",
          "R4G4B4A4_UNORM"
        ]
      },
      "blending": {
        "type": "string",
        "enum": [
          "DestColor",
          "DestAlpha",
          "SourceColor",
          "One",
          "OneMinusDestAlpha",
          "OneMinusDestColor",
          "OneMinusSrcAlpha",
          "OneMinusSrcColor",
          "SourceAlpha",
          "Zero"
        ]
      },
      "vertexField": {
        "type": "object",
        "properties": {
          "field": {
            "type": "string",
            "description": "Field name."
          }
        }
      },
      "samplerState": {
        "type": "object",
        "description": "Texture configuration.",
        "properties": {
          "samplerIndex": {
            "type": "integer",
            "description": "Texture index."
          },
          "textureFilter": {
            "type": "string",
            "description": "Texture mapping option.",
            "enum": [
              "Bilinear",
              "MipMapBilinear",
              "PCF",
              "Point",
              "TexelAA",
              "Trilinear"
            ]
          },
          "textureWrap": {
            "type": "string",
            "description": "Behavior, when accessing coordinates outside of the texture.",
            "enum": [
              "Clamp",
              "Repeat"
            ]
          },
          "shaderStage": {
            "type": "string",
            "enum": [
              "Vertex",
              "Pixel",
              "Geometry"
            ]
          },
          "comparisonFunc": {
            "$ref": "#/definitions/library/functions"
          }
        }
      },
      "+states": {
        "type": "array",
        "description": "A list of states to enable",
        "items": {
          "type": "string",
          "enum": [
            "Blending",
            "DisableAlphaWrite",
            "DisableColorWrite",
            "DisableCulling",
            "DisableDepthWrite",
            "EnableAlphaToCoverage",
            "EnableStencilTest",
            "StencilWrite",
            "InvertCulling",
            "Wireframe"
          ]
        }
      },
      "variant": {
        "type": "object",
        "properties": {
          "vertexFields": {
            "$ref": "#/definitions/library/vertexFields"
          },
          "+defines": {
            "$ref": "#/definitions/library/+defines"
          },
          "+states": {
            "$ref": "#/definitions/library/+states"
          },
          "-defines": {
            "$ref": "#/definitions/library/-defines"
          }
        }
      }
    },
    "material": {
      "type": "object",
      "vertexShader": {
        "type": "string",
        "description": "Path to the shader relative to glsl/hlsl folder. For hlsl shader, the .hlsl suffix is added"
      },
      "vrGeometryShader": {
        "type": "string",
        "description": "Path to the shader relative to glsl/hlsl folder. For hlsl shader, the .hlsl suffix is added"
      },
      "fragmentShader": {
        "type": "string",
        "description": "Path to the shader relative to glsl/hlsl folder. For hlsl shader, the .hlsl suffix is added"
      },
      "vertexFields": {
        "type": "array",
        "description": "A list of fields, that are passed to the vertex shader.",
        "items": {
          "$ref": "#/definitions/library/vertexField"
        }
      },
      "variants": {
        "type": "array",
        "description": "An explanation about the purpose of this instance.",
        "items": {
          "anyOf": [
            {
              "type": "object",
              "description": "An explanation about the purpose of this instance.",
              "properties": {
                "skinning": {
                  "$ref": "#/definitions/library/variant"
                }
              }
            },
            {
              "type": "object",
              "description": "An explanation about the purpose of this instance.",
              "properties": {
                "skinning_color": {
                  "$ref": "#/definitions/library/variant"
                }
              }
            }
          ]
        }
      },
      "msaaSupport": {
        "type": "string",
        "description": "Multisample anti-aliasing support.",
        "enum": [
          "Both",
          "MSAA",
          "NonMSAA"
        ]
      },
      "+samplerStates": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/library/samplerState"
        }
      },
      "blendSrc": {
        "description": "Specifies how the red, green, blue, and alpha source blending factors are computed.",
        "$ref": "#/definitions/library/blending"
      },
      "blendDst": {
        "description": "Specifies how the red, green, blue, and alpha destination blending factors are computed.",
        "$ref": "#/definitions/library/blending"
      },
      "alphaSrc": {
        "description": "Specifies how the red, green, blue, and alpha source blending factors are computed.",
        "$ref": "#/definitions/library/blending"
      },
      "alphaDst": {
        "description": "Specifies how the red, green, blue, and alpha destination blending factors are computed.",
        "$ref": "#/definitions/library/blending"
      },
      "+defines": {
        "type": "array",
        "description": "A list of #define directives to add",
        "items": {
          "type": "string"
        }
      },
      "+states": {
        "$ref": "#/definitions/library/+states"
      },
      "-defines": {
        "type": "array",
        "description": "A list of #define directives to remove",
        "items": {
          "type": "string"
        }
      },
      "depthBias": {
        "type": "number"
      },
      "slopeScaledDepthBias": {
        "type": "number"
      },
      "depthBiasOGL": {
        "type": "number"
      },
      "slopeScaledDepthBiasOGL": {
        "type": "number"
      },
      "depthFunc": {
        "description": "Specifies the depth comparison function.",
        "$ref": "#/definitions/library/functions"
      },
      "stencilRefOverride": {
        "type": "integer"
      },
      "stencilRef": {
        "type": "integer"
      },
      "stencilReadMask": {
        "type": "integer"
      },
      "stencilWriteMask": {
        "type": "integer"
      },
      "primitiveMode": {
        "$ref": "#/definitions/library/primitiveMode"
      },
      "frontFace": {
        "$ref": "#/definitions/library/face"
      },
      "backFace": {
        "$ref": "#/definitions/library/face"
      },
      "renderTargetFormats": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/library/renderTargetFormats"
        }
      },
      "isAnimatedTexture": {
        "type": "boolean"
      }
    }
  }
}